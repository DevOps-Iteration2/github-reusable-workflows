name: Release - Reusable
on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      release_archive_file:
        required: true
        type: string
      npm_install:
        required: true
        type: boolean
    secrets:
      vault_token:
        required: true
jobs:
  CI_Steps:
    runs-on: self-hosted
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Install NodeJS modules
        run: npm install
        if: ${{inputs.npm_install}}

      - name: Import Vault Secrets
        id: vault-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.devopsjourney.fun:8200
          token: ${{secrets.vault_token}} # We have manually attached vault_token in github actions
          tlsSkipVerify: true
          secrets: |
            common/data/common artifactory_user | artifactory_user
            common/data/common artifactory_password | artifactory_password

      - name: Create a version file
        run: echo ${GITHUB_REF_NAME} > VERSION

      - name: Prepare Artifact
        run: zip -r artifact.zip ${{inputs.release_archive_files}}

      - name: Upload Artifact
        run: curl -f -v --user ${{steps.vault-secrets.outputs.artifactory_user}}:${{steps.vault-secrets.outputs.artifactory_password}} --data-binary@artifact.zip -X PUT "http://artifactory-internal.devopsjourney.fun:8081/artifactory/${{inputs.project_name}}/${GITHUB_REF_NAME}.zip"

      - run: |
         echo '{
         "environment_variables": [
           {
             "name": "APP_VERSION",
             "secure": false,
             "value": "app_version"
           }
         ],
         "update_materials_before_scheduling": true
         }' | sed -e "s/app_version/${GITHUB_REF_NAME}/" | jq >data.json
         curl 'http://172.31.36.53:8153/go/api/pipelines/${{ inputs.project_name }}/schedule' -H 'Accept: application/vnd.go.cd.v1+json' -H 'Content-Type: application/json' -X POST -d "@data.json"

      - name: Release Software
        run: echo OK

#       if: ${{ startsWith(github.ref, 'refs/tags/')}}